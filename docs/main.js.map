{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["const cells = document.querySelectorAll('.cell');\r\nconst statusText = document.querySelector(\"#statusText\") as HTMLElement;\r\nconst restartBtn = document.querySelector(\"#restartBtn\") as HTMLElement;\r\nconst winConditions = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];\r\n\r\nlet options: string[] = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nlet currentPlayer: string = \"X\";\r\nlet running: boolean = false;\r\n\r\nfunction initializeGame() {\r\n    cells.forEach(cell => {\r\n        (cell as HTMLElement).addEventListener(\"click\", cellClicked);\r\n    });\r\n    restartBtn.addEventListener(\"click\", restartGame);\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n    running = true;\r\n}\r\n\r\nfunction cellClicked(this: HTMLElement) {\r\n    const cellIndex = this.getAttribute(\"cellIndex\");\r\n\r\n    if (!cellIndex || options[+cellIndex] !== \"\" || !running) {\r\n        return;\r\n    }\r\n    updateCell(this, +cellIndex);\r\n    checkWinner();\r\n}\r\n\r\nfunction updateCell(cell: HTMLElement, index: number) {\r\n    options[index] = currentPlayer;\r\n    cell.textContent = currentPlayer;\r\n}\r\n\r\nfunction changePlayer() {\r\n    currentPlayer = (currentPlayer === \"X\") ? \"O\" : \"X\";\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n}\r\n\r\nfunction checkWinner() {\r\n    let roundWon = false;\r\n\r\n    for (let i = 0; i < winConditions.length; i++) {\r\n        const condition = winConditions[i];\r\n        const cellA = options[condition[0]];\r\n        const cellB = options[condition[1]];\r\n        const cellC = options[condition[2]];\r\n\r\n        if (cellA === \"\" || cellB === \"\" || cellC === \"\") {\r\n            continue;\r\n        }\r\n        if (cellA === cellB && cellB === cellC) {\r\n            roundWon = true;\r\n            break;\r\n        }\r\n    }\r\n    if (roundWon) {\r\n        statusText.textContent = `${currentPlayer} wins!`;\r\n        running = false;\r\n    } if (!options.some(value => value === \"\")) {\r\n        statusText.textContent = `Draw!`;\r\n        running = false;\r\n    } else {\r\n        changePlayer();\r\n    }\r\n}\r\n\r\nfunction restartGame() {\r\n    options = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    currentPlayer = \"X\";\r\n    running = true;\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n\r\n    cells.forEach(cell => {\r\n        (cell as HTMLElement).textContent = \"\";\r\n    });\r\n}\r\n\r\ninitializeGame();\r\n"],
  "mappings": "AAAA,MAAM,QAAQ,SAAS,iBAAiB,OAAO;AAC/C,MAAM,aAAa,SAAS,cAAc,aAAa;AACvD,MAAM,aAAa,SAAS,cAAc,aAAa;AACvD,MAAM,gBAAgB;AAAA,EAClB,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,CAAC;AACZ;AAEA,IAAI,UAAoB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC3D,IAAI,gBAAwB;AAC5B,IAAI,UAAmB;AAEvB,SAAS,iBAAiB;AACtB,QAAM,QAAQ,UAAQ;AAClB,IAAC,KAAqB,iBAAiB,SAAS,WAAW;AAAA,EAC/D,CAAC;AACD,aAAW,iBAAiB,SAAS,WAAW;AAChD,aAAW,cAAc,GAAG,aAAa;AACzC,YAAU;AACd;AAEA,SAAS,cAA+B;AACpC,QAAM,YAAY,KAAK,aAAa,WAAW;AAE/C,MAAI,CAAC,aAAa,QAAQ,CAAC,SAAS,MAAM,MAAM,CAAC,SAAS;AACtD;AAAA,EACJ;AACA,aAAW,MAAM,CAAC,SAAS;AAC3B,cAAY;AAChB;AAEA,SAAS,WAAW,MAAmB,OAAe;AAClD,UAAQ,KAAK,IAAI;AACjB,OAAK,cAAc;AACvB;AAEA,SAAS,eAAe;AACpB,kBAAiB,kBAAkB,MAAO,MAAM;AAChD,aAAW,cAAc,GAAG,aAAa;AAC7C;AAEA,SAAS,cAAc;AACnB,MAAI,WAAW;AAEf,WAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC3C,UAAM,YAAY,cAAc,CAAC;AACjC,UAAM,QAAQ,QAAQ,UAAU,CAAC,CAAC;AAClC,UAAM,QAAQ,QAAQ,UAAU,CAAC,CAAC;AAClC,UAAM,QAAQ,QAAQ,UAAU,CAAC,CAAC;AAElC,QAAI,UAAU,MAAM,UAAU,MAAM,UAAU,IAAI;AAC9C;AAAA,IACJ;AACA,QAAI,UAAU,SAAS,UAAU,OAAO;AACpC,iBAAW;AACX;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,UAAU;AACV,eAAW,cAAc,GAAG,aAAa;AACzC,cAAU;AAAA,EACd;AAAE,MAAI,CAAC,QAAQ,KAAK,WAAS,UAAU,EAAE,GAAG;AACxC,eAAW,cAAc;AACzB,cAAU;AAAA,EACd,OAAO;AACH,iBAAa;AAAA,EACjB;AACJ;AAEA,SAAS,cAAc;AACnB,YAAU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC7C,kBAAgB;AAChB,YAAU;AACV,aAAW,cAAc,GAAG,aAAa;AAEzC,QAAM,QAAQ,UAAQ;AAClB,IAAC,KAAqB,cAAc;AAAA,EACxC,CAAC;AACL;AAEA,eAAe;",
  "names": []
}
