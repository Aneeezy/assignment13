{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["const cells = document.querySelectorAll('.cell');\r\nconst statusText = document.querySelector(\"#statusText\") as HTMLElement;\r\nconst restartBtn = document.querySelector(\"#restartBtn\") as HTMLElement;\r\nconst winConditions = [\r\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n    [0, 4, 8], [2, 4, 6]\r\n];\r\n\r\n\r\nlet options: string[] = JSON.parse(localStorage.getItem(\"boardState\") || '[\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]');\r\nlet currentPlayer: string = localStorage.getItem(\"currentPlayer\") || \"X\";\r\nlet running: boolean = true;\r\n\r\nfunction initializeGame() {\r\n    cells.forEach((cell, index) => {\r\n        const cellElement = cell as HTMLElement;\r\n\r\n\r\n        cellElement.textContent = options[index];\r\n\r\n\r\n        cellElement.addEventListener(\"click\", () => cellClicked(index));\r\n        cellElement.addEventListener(\"mouseenter\", () => showPreview(index));\r\n        cellElement.addEventListener(\"mouseleave\", () => removePreview(index));\r\n    });\r\n\r\n    restartBtn.addEventListener(\"click\", restartGame);\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n}\r\n\r\nfunction cellClicked(index: number) {\r\n    if (options[index] !== \"\" || !running) return;\r\n\r\n    updateCell(index);\r\n    checkWinner();\r\n}\r\n\r\nfunction updateCell(index: number) {\r\n    options[index] = currentPlayer;\r\n    (cells[index] as HTMLElement).textContent = currentPlayer;\r\n\r\n    saveGameState();\r\n}\r\n\r\nfunction showPreview(index: number) {\r\n    if (options[index] === \"\") {\r\n        (cells[index] as HTMLElement).textContent = currentPlayer;\r\n        (cells[index] as HTMLElement).style.opacity = \"0.5\";\r\n    }\r\n}\r\n\r\nfunction removePreview(index: number) {\r\n    if (options[index] === \"\") {\r\n        (cells[index] as HTMLElement).textContent = \"\";\r\n        (cells[index] as HTMLElement).style.opacity = \"1\";\r\n    }\r\n}\r\n\r\nfunction changePlayer() {\r\n    currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n\r\n    localStorage.setItem(\"currentPlayer\", currentPlayer);\r\n}\r\n\r\nfunction checkWinner() {\r\n    let roundWon = false;\r\n\r\n    for (let condition of winConditions) {\r\n        const [a, b, c] = condition;\r\n        if (options[a] !== \"\" && options[a] === options[b] && options[b] === options[c]) {\r\n            roundWon = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (roundWon) {\r\n        statusText.textContent = `${currentPlayer} wins!`;\r\n        running = false;\r\n    } else if (!options.some(value => value === \"\")) {\r\n        statusText.textContent = `Draw!`;\r\n        running = false;\r\n    } else {\r\n        changePlayer();\r\n    }\r\n}\r\n\r\nfunction restartGame() {\r\n    options = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    currentPlayer = \"X\";\r\n    running = true;\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n\r\n    cells.forEach(cell => {\r\n        const cellElement = cell as HTMLElement;\r\n        cellElement.textContent = \"\";\r\n        cellElement.style.opacity = \"1\";\r\n    });\r\n\r\n    saveGameState();\r\n}\r\n\r\nfunction saveGameState() {\r\n    localStorage.setItem(\"boardState\", JSON.stringify(options));\r\n    localStorage.setItem(\"currentPlayer\", currentPlayer);\r\n}\r\n\r\n\r\ninitializeGame();\r\n"],
  "mappings": "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",
  "names": []
}
